// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WeatherApplication.proto

package com.project.weather.grpc;

/**
 * Protobuf type {@code com.project.weather.grpc.WeatherData}
 */
public  final class WeatherData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.project.weather.grpc.WeatherData)
    WeatherDataOrBuilder {
  // Use WeatherData.newBuilder() to construct.
  private WeatherData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WeatherData() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private WeatherData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.project.weather.grpc.Temperature.Builder subBuilder = null;
            if (temp_ != null) {
              subBuilder = temp_.toBuilder();
            }
            temp_ = input.readMessage(com.project.weather.grpc.Temperature.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(temp_);
              temp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.project.weather.grpc.Pressure.Builder subBuilder = null;
            if (press_ != null) {
              subBuilder = press_.toBuilder();
            }
            press_ = input.readMessage(com.project.weather.grpc.Pressure.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(press_);
              press_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.project.weather.grpc.WeatherApplication.internal_static_com_project_weather_grpc_WeatherData_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.project.weather.grpc.WeatherApplication.internal_static_com_project_weather_grpc_WeatherData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.project.weather.grpc.WeatherData.class, com.project.weather.grpc.WeatherData.Builder.class);
  }

  public static final int TEMP_FIELD_NUMBER = 1;
  private com.project.weather.grpc.Temperature temp_;
  /**
   * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
   */
  public boolean hasTemp() {
    return temp_ != null;
  }
  /**
   * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
   */
  public com.project.weather.grpc.Temperature getTemp() {
    return temp_ == null ? com.project.weather.grpc.Temperature.getDefaultInstance() : temp_;
  }
  /**
   * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
   */
  public com.project.weather.grpc.TemperatureOrBuilder getTempOrBuilder() {
    return getTemp();
  }

  public static final int PRESS_FIELD_NUMBER = 2;
  private com.project.weather.grpc.Pressure press_;
  /**
   * <code>.com.project.weather.grpc.Pressure press = 2;</code>
   */
  public boolean hasPress() {
    return press_ != null;
  }
  /**
   * <code>.com.project.weather.grpc.Pressure press = 2;</code>
   */
  public com.project.weather.grpc.Pressure getPress() {
    return press_ == null ? com.project.weather.grpc.Pressure.getDefaultInstance() : press_;
  }
  /**
   * <code>.com.project.weather.grpc.Pressure press = 2;</code>
   */
  public com.project.weather.grpc.PressureOrBuilder getPressOrBuilder() {
    return getPress();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (temp_ != null) {
      output.writeMessage(1, getTemp());
    }
    if (press_ != null) {
      output.writeMessage(2, getPress());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (temp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTemp());
    }
    if (press_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPress());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.project.weather.grpc.WeatherData)) {
      return super.equals(obj);
    }
    com.project.weather.grpc.WeatherData other = (com.project.weather.grpc.WeatherData) obj;

    boolean result = true;
    result = result && (hasTemp() == other.hasTemp());
    if (hasTemp()) {
      result = result && getTemp()
          .equals(other.getTemp());
    }
    result = result && (hasPress() == other.hasPress());
    if (hasPress()) {
      result = result && getPress()
          .equals(other.getPress());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTemp()) {
      hash = (37 * hash) + TEMP_FIELD_NUMBER;
      hash = (53 * hash) + getTemp().hashCode();
    }
    if (hasPress()) {
      hash = (37 * hash) + PRESS_FIELD_NUMBER;
      hash = (53 * hash) + getPress().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.project.weather.grpc.WeatherData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.project.weather.grpc.WeatherData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.project.weather.grpc.WeatherData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.project.weather.grpc.WeatherData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.project.weather.grpc.WeatherData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.project.weather.grpc.WeatherData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.project.weather.grpc.WeatherData)
      com.project.weather.grpc.WeatherDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.project.weather.grpc.WeatherApplication.internal_static_com_project_weather_grpc_WeatherData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.project.weather.grpc.WeatherApplication.internal_static_com_project_weather_grpc_WeatherData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.project.weather.grpc.WeatherData.class, com.project.weather.grpc.WeatherData.Builder.class);
    }

    // Construct using com.project.weather.grpc.WeatherData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (tempBuilder_ == null) {
        temp_ = null;
      } else {
        temp_ = null;
        tempBuilder_ = null;
      }
      if (pressBuilder_ == null) {
        press_ = null;
      } else {
        press_ = null;
        pressBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.project.weather.grpc.WeatherApplication.internal_static_com_project_weather_grpc_WeatherData_descriptor;
    }

    public com.project.weather.grpc.WeatherData getDefaultInstanceForType() {
      return com.project.weather.grpc.WeatherData.getDefaultInstance();
    }

    public com.project.weather.grpc.WeatherData build() {
      com.project.weather.grpc.WeatherData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.project.weather.grpc.WeatherData buildPartial() {
      com.project.weather.grpc.WeatherData result = new com.project.weather.grpc.WeatherData(this);
      if (tempBuilder_ == null) {
        result.temp_ = temp_;
      } else {
        result.temp_ = tempBuilder_.build();
      }
      if (pressBuilder_ == null) {
        result.press_ = press_;
      } else {
        result.press_ = pressBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.project.weather.grpc.WeatherData) {
        return mergeFrom((com.project.weather.grpc.WeatherData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.project.weather.grpc.WeatherData other) {
      if (other == com.project.weather.grpc.WeatherData.getDefaultInstance()) return this;
      if (other.hasTemp()) {
        mergeTemp(other.getTemp());
      }
      if (other.hasPress()) {
        mergePress(other.getPress());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.project.weather.grpc.WeatherData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.project.weather.grpc.WeatherData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.project.weather.grpc.Temperature temp_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.project.weather.grpc.Temperature, com.project.weather.grpc.Temperature.Builder, com.project.weather.grpc.TemperatureOrBuilder> tempBuilder_;
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public boolean hasTemp() {
      return tempBuilder_ != null || temp_ != null;
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public com.project.weather.grpc.Temperature getTemp() {
      if (tempBuilder_ == null) {
        return temp_ == null ? com.project.weather.grpc.Temperature.getDefaultInstance() : temp_;
      } else {
        return tempBuilder_.getMessage();
      }
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public Builder setTemp(com.project.weather.grpc.Temperature value) {
      if (tempBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        temp_ = value;
        onChanged();
      } else {
        tempBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public Builder setTemp(
        com.project.weather.grpc.Temperature.Builder builderForValue) {
      if (tempBuilder_ == null) {
        temp_ = builderForValue.build();
        onChanged();
      } else {
        tempBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public Builder mergeTemp(com.project.weather.grpc.Temperature value) {
      if (tempBuilder_ == null) {
        if (temp_ != null) {
          temp_ =
            com.project.weather.grpc.Temperature.newBuilder(temp_).mergeFrom(value).buildPartial();
        } else {
          temp_ = value;
        }
        onChanged();
      } else {
        tempBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public Builder clearTemp() {
      if (tempBuilder_ == null) {
        temp_ = null;
        onChanged();
      } else {
        temp_ = null;
        tempBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public com.project.weather.grpc.Temperature.Builder getTempBuilder() {
      
      onChanged();
      return getTempFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    public com.project.weather.grpc.TemperatureOrBuilder getTempOrBuilder() {
      if (tempBuilder_ != null) {
        return tempBuilder_.getMessageOrBuilder();
      } else {
        return temp_ == null ?
            com.project.weather.grpc.Temperature.getDefaultInstance() : temp_;
      }
    }
    /**
     * <code>.com.project.weather.grpc.Temperature temp = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.project.weather.grpc.Temperature, com.project.weather.grpc.Temperature.Builder, com.project.weather.grpc.TemperatureOrBuilder> 
        getTempFieldBuilder() {
      if (tempBuilder_ == null) {
        tempBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.project.weather.grpc.Temperature, com.project.weather.grpc.Temperature.Builder, com.project.weather.grpc.TemperatureOrBuilder>(
                getTemp(),
                getParentForChildren(),
                isClean());
        temp_ = null;
      }
      return tempBuilder_;
    }

    private com.project.weather.grpc.Pressure press_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.project.weather.grpc.Pressure, com.project.weather.grpc.Pressure.Builder, com.project.weather.grpc.PressureOrBuilder> pressBuilder_;
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public boolean hasPress() {
      return pressBuilder_ != null || press_ != null;
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public com.project.weather.grpc.Pressure getPress() {
      if (pressBuilder_ == null) {
        return press_ == null ? com.project.weather.grpc.Pressure.getDefaultInstance() : press_;
      } else {
        return pressBuilder_.getMessage();
      }
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public Builder setPress(com.project.weather.grpc.Pressure value) {
      if (pressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        press_ = value;
        onChanged();
      } else {
        pressBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public Builder setPress(
        com.project.weather.grpc.Pressure.Builder builderForValue) {
      if (pressBuilder_ == null) {
        press_ = builderForValue.build();
        onChanged();
      } else {
        pressBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public Builder mergePress(com.project.weather.grpc.Pressure value) {
      if (pressBuilder_ == null) {
        if (press_ != null) {
          press_ =
            com.project.weather.grpc.Pressure.newBuilder(press_).mergeFrom(value).buildPartial();
        } else {
          press_ = value;
        }
        onChanged();
      } else {
        pressBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public Builder clearPress() {
      if (pressBuilder_ == null) {
        press_ = null;
        onChanged();
      } else {
        press_ = null;
        pressBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public com.project.weather.grpc.Pressure.Builder getPressBuilder() {
      
      onChanged();
      return getPressFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    public com.project.weather.grpc.PressureOrBuilder getPressOrBuilder() {
      if (pressBuilder_ != null) {
        return pressBuilder_.getMessageOrBuilder();
      } else {
        return press_ == null ?
            com.project.weather.grpc.Pressure.getDefaultInstance() : press_;
      }
    }
    /**
     * <code>.com.project.weather.grpc.Pressure press = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.project.weather.grpc.Pressure, com.project.weather.grpc.Pressure.Builder, com.project.weather.grpc.PressureOrBuilder> 
        getPressFieldBuilder() {
      if (pressBuilder_ == null) {
        pressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.project.weather.grpc.Pressure, com.project.weather.grpc.Pressure.Builder, com.project.weather.grpc.PressureOrBuilder>(
                getPress(),
                getParentForChildren(),
                isClean());
        press_ = null;
      }
      return pressBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.project.weather.grpc.WeatherData)
  }

  // @@protoc_insertion_point(class_scope:com.project.weather.grpc.WeatherData)
  private static final com.project.weather.grpc.WeatherData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.project.weather.grpc.WeatherData();
  }

  public static com.project.weather.grpc.WeatherData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WeatherData>
      PARSER = new com.google.protobuf.AbstractParser<WeatherData>() {
    public WeatherData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new WeatherData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WeatherData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WeatherData> getParserForType() {
    return PARSER;
  }

  public com.project.weather.grpc.WeatherData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

